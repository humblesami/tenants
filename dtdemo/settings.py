"""
Django settings for dtdemo project.

Generated by 'django-admin startproject' using Django 2.2.

For more information on this file, see
https://docs.djangoproject.com/en/2.2/topics/settings/

For the full list of settings and their values, see
https://docs.djangoproject.com/en/2.2/ref/settings/
"""

import os

# Build paths inside the project like this: os.path.join(BASE_DIR, ...)
BASE_DIR = os.path.dirname(os.path.dirname(os.path.abspath(__file__)))


# Quick-start development settings - unsuitable for production
# See https://docs.djangoproject.com/en/2.2/howto/deployment/checklist/

# SECURITY WARNING: keep the secret key used in production secret!
SECRET_KEY = 'e_y^*#ppk09l$+k42hhtd^_edrcv6maddj50*5i=+v&8a9(z)e'

# SECURITY WARNING: don't run with debug turned on in production!
DEBUG = True

ALLOWED_HOSTS = ['*']


# Application definition

MIDDLEWARE = [
    'middlewares.middleware.CustomTenantMiddleware',
    'django_tenants.middleware.main.TenantMainMiddleware',
    'django.middleware.security.SecurityMiddleware',
    'django.contrib.sessions.middleware.SessionMiddleware',
    'django.middleware.common.CommonMiddleware',
    'django.middleware.csrf.CsrfViewMiddleware',
    'django.contrib.auth.middleware.AuthenticationMiddleware',
    'django.contrib.messages.middleware.MessageMiddleware',
    'django.middleware.clickjacking.XFrameOptionsMiddleware',
]

DATABASE_ROUTERS = (
    'django_tenants.routers.TenantSyncRouter',
)

PROJECT_ROOT = os.path.normpath(os.path.dirname(__file__))
TEMPLATES = [
    {
        'BACKEND': 'django.template.backends.django.DjangoTemplates',
        'DIRS': [
            os.path.join(PROJECT_ROOT, '..', 'dtdemo/templates'),
        ],
        'APP_DIRS': True,
        'OPTIONS': {
            'context_processors': [
                'django.template.context_processors.debug',
                'django.template.context_processors.request',
                'django.contrib.auth.context_processors.auth',
                'django.contrib.messages.context_processors.messages',
            ],
        },
    },
]

WSGI_APPLICATION = 'dtdemo.wsgi.application'


# Password validation
# https://docs.djangoproject.com/en/2.2/ref/settings/#auth-password-validators

AUTH_PASSWORD_VALIDATORS = [
    {
        'NAME': 'django.contrib.auth.password_validation.UserAttributeSimilarityValidator',
    },
    {
        'NAME': 'django.contrib.auth.password_validation.MinimumLengthValidator',
    },
    {
        'NAME': 'django.contrib.auth.password_validation.CommonPasswordValidator',
    },
    {
        'NAME': 'django.contrib.auth.password_validation.NumericPasswordValidator',
    },
]


# Internationalization
# https://docs.djangoproject.com/en/2.2/topics/i18n/

LANGUAGE_CODE = 'en-us'

TIME_ZONE = 'UTC'

USE_I18N = True

USE_L10N = True

USE_TZ = True


# Static files (CSS, JavaScript, Images)
# https://docs.djangoproject.com/en/2.2/howto/static-files/

DATABASES = {
    "default": {
        "ENGINE": "django_tenants.postgresql_backend",
        "NAME": "dtdemo",
        "USER": "odoo",
        "PASSWORD": "123",
    }
}

SHARED_APPS = (
    'django.contrib.auth', # Defined in both shared apps and tenant apps
    'django.contrib.contenttypes', # Defined in both shared apps and tenant apps
    'django.contrib.messages',
    'django.contrib.sessions',
    'tenant_users.permissions', # Defined in both shared apps and tenant apps
    # 'django.contrib.sites',
    'tenant_users.tenants', # defined only in shared apps
    'customers', # Custom defined app that contains the TenantModel. Must NOT exist in TENANT_APPS
    'users',
)

TENANT_APPS = (
    'django.contrib.auth', # Defined in both shared apps and tenant apps\
    'django.contrib.contenttypes', # Defined in both shared apps and tenant apps
    'tenant_users.permissions',
    # 'django.contrib.site',
    'django.contrib.admin',
    'myclientapp'
)

INSTALLED_APPS = list(set(SHARED_APPS + TENANT_APPS))

PUBLIC_SCHEMA_URLCONF = 'dtdemo.public_urls'
ROOT_URLCONF = 'dtdemo.urls'

AUTH_USER_MODEL = 'users.TenantUser'
AUTHENTICATION_BACKENDS = (
    'tenant_users.permissions.backend.UserBackend',
)

TENANT_USERS_DOMAIN = "dtdemo.local"
SESSION_COOKIE_DOMAIN = '.dtdemo.local'

TENANT_MODEL = "customers.Client" # app.Model
TENANT_DOMAIN_MODEL = "customers.Domain" # app.Model

STATICFILES_DIRS = (
    os.path.join(PROJECT_ROOT, '..', 'static'),
)
STATIC_URL = '/static/'